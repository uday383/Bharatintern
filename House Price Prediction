import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error, r2_score

%matplotlib inline
HouseDF = pd.read_csv('USA_Housing.csv')
HouseDF
HouseDF.info()
HouseDF.describe()
HouseDF.columns
sns.pairplot(HouseDF)
sns.displot(HouseDF['Price'])
x = HouseDF[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
       'Avg. Area Number of Bedrooms', 'Area Population']]

y = HouseDF['Price']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.40, random_state=101)
lm = LinearRegression()
lm.fit(x_train, y_train)
print(lm.intercept_)
coeff_df = pd.DataFrame(lm.coef_,x.columns,columns=['Coefficient'])
coeff_df
predictions = lm.predict(x_test)
plt.scatter(y_test, predictions)
plt.xlabel("True Prices")
plt.ylabel("Predicted Prices")
plt.title("True Prices vs. Predicted Prices")
plt.show()
sns.displot((y_test-predictions),bins=50)
mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)
mae = mean_absolute_error(y_test, predictions)
print("Mean Squared Error:", mse)
print("R-squared:", r2)
print("Mean Absolute Error:",mae)
